parsed_page.css('div#stats').text
parsed_page.css('div#stats')
text
parsed_page.search('div#stats').map do |x| puts x.inner_text end
do |b| b.content end
parse_paged.css('.more').each do |box| more.content end
  puts box.content
parse_paged.css('.more').each do |box|
  puts box.content
parse_paged.css('.more').each do |box|
  #      ^-- here
parsed_pagedoc.css('.BOX').each do |box|
articles.count
articles = parsed_page.css("li")
articles.count
articles = parsed_page.css('li')
articles.count
articles = parsed_page.css('div')
articles = parsed_page.css('div.stories-list')
articles = parsed_page.css('div.stories-item')
articles.count
articles = parsed_page.css('div.more')
articles.count
articles = parsed_page.css('div.stories-item')
parsed_page.css('div.stories-item')
doc.css('div.stories-item')
parsed_page.xpath('//div[contains(@class, "stories-item")]')
parsed_page.xpath('//div[contains(@class, "stories-item")
parsed_page.css("stories-item")
parsed_page.css('stories-item')
parsed_page.css('div.more')
parsed_page
parsed_page.css
unparsed_page
parsed_page.css('div.stories-item')
parsed_page.css('div.ul.li.div.stories-item')
parsed_page.css('ul.li.div.stories-item')
parsed_page.css('il.li.div.stories-item')
parsed_page.css('div.stories-item')
articles.count
articles = parsed_page.css('div.stories-item')
parsed_page.css('div.stories-item')
parsed_page
parse_page
url
